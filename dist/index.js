"use strict";(self.webpackChunkwebpack_demo=self.webpackChunkwebpack_demo||[]).push([[826],{426:(n,e,t)=>{t.d(e,{Z:()=>i});var o=t(537),r=t.n(o),s=t(645),a=t.n(s)()(r());a.push([n.id,"body {\n  background-color: #f6f6f6;\n}\n\n*:focus {\n  outline: none !important;\n  box-shadow: none !important;\n}\n\n*:checked + span,\n.cancel {\n  text-decoration: line-through;\n}\n\n.custom-bg {\n  background-color: #fce9b3;\n}\n\n#task {\n  padding: 20px;\n}\n\n#myList {\n  list-style: none;\n  margin: 0;\n}\n\n.main {\n  width: 500px;\n  margin: 100px auto;\n  background: #fff;\n  padding: 0;\n  box-shadow: 2px 2px 4px rgba(0, 0, 0, 0.2);\n}\n\ninput:placeholder-shown {\n  font-style: italic;\n}\n\n.form-control {\n  border: none;\n}\n\n.list-group {\n  margin: 0;\n}\n\n.list-group-item {\n  border: none;\n}\n\n#refresh {\n  cursor: pointer;\n  color: red;\n}\n\n[contenteditable='true']#dash {\n  white-space: nowrap;\n  overflow: hidden;\n  padding: 7px;\n  outline: 0 solid transparent;\n}\n\n.close {\n  display: none;\n  color: red !important;\n  opacity: 1;\n}\n\n.close:hover {\n  opacity: 1;\n}\n\n.fa-ellipsis-v,\n.fa-trash-o {\n  margin-left: auto;\n  cursor: pointer;\n}\n\ninput[type='checkbox'] {\n  cursor: pointer;\n}\n\n#complete {\n  text-decoration: none !important;\n}\n\n#complete p {\n  color: #777;\n  font-size: 15px;\n  font-weight: lighter;\n}\n\n#complete p:hover {\n  color: #000;\n  text-decoration: underline;\n}\n\n.spin-animation {\n  transition: 0.9s;\n  transform: rotate(360deg);\n  -webkit-transform: rotate(360deg);\n  -ms-transform: rotate(360deg);\n}\n\n.reset {\n  cursor: pointer;\n  color: red;\n  transition: 0.5s;\n  transform: rotate(360deg);\n  -ms-transform: rotate(360deg);\n  -webkit-transform: rotate(360deg);\n}\n","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;EACE,yBAAyB;AAC3B;;AAEA;EACE,wBAAwB;EACxB,2BAA2B;AAC7B;;AAEA;;EAEE,6BAA6B;AAC/B;;AAEA;EACE,yBAAyB;AAC3B;;AAEA;EACE,aAAa;AACf;;AAEA;EACE,gBAAgB;EAChB,SAAS;AACX;;AAEA;EACE,YAAY;EACZ,kBAAkB;EAClB,gBAAgB;EAChB,UAAU;EACV,0CAA0C;AAC5C;;AAEA;EACE,kBAAkB;AACpB;;AAEA;EACE,YAAY;AACd;;AAEA;EACE,SAAS;AACX;;AAEA;EACE,YAAY;AACd;;AAEA;EACE,eAAe;EACf,UAAU;AACZ;;AAEA;EACE,mBAAmB;EACnB,gBAAgB;EAChB,YAAY;EACZ,4BAA4B;AAC9B;;AAEA;EACE,aAAa;EACb,qBAAqB;EACrB,UAAU;AACZ;;AAEA;EACE,UAAU;AACZ;;AAEA;;EAEE,iBAAiB;EACjB,eAAe;AACjB;;AAEA;EACE,eAAe;AACjB;;AAEA;EACE,gCAAgC;AAClC;;AAEA;EACE,WAAW;EACX,eAAe;EACf,oBAAoB;AACtB;;AAEA;EACE,WAAW;EACX,0BAA0B;AAC5B;;AAEA;EACE,gBAAgB;EAChB,yBAAyB;EACzB,iCAAiC;EACjC,6BAA6B;AAC/B;;AAEA;EACE,eAAe;EACf,UAAU;EACV,gBAAgB;EAChB,yBAAyB;EACzB,6BAA6B;EAC7B,iCAAiC;AACnC",sourcesContent:["body {\n  background-color: #f6f6f6;\n}\n\n*:focus {\n  outline: none !important;\n  box-shadow: none !important;\n}\n\n*:checked + span,\n.cancel {\n  text-decoration: line-through;\n}\n\n.custom-bg {\n  background-color: #fce9b3;\n}\n\n#task {\n  padding: 20px;\n}\n\n#myList {\n  list-style: none;\n  margin: 0;\n}\n\n.main {\n  width: 500px;\n  margin: 100px auto;\n  background: #fff;\n  padding: 0;\n  box-shadow: 2px 2px 4px rgba(0, 0, 0, 0.2);\n}\n\ninput:placeholder-shown {\n  font-style: italic;\n}\n\n.form-control {\n  border: none;\n}\n\n.list-group {\n  margin: 0;\n}\n\n.list-group-item {\n  border: none;\n}\n\n#refresh {\n  cursor: pointer;\n  color: red;\n}\n\n[contenteditable='true']#dash {\n  white-space: nowrap;\n  overflow: hidden;\n  padding: 7px;\n  outline: 0 solid transparent;\n}\n\n.close {\n  display: none;\n  color: red !important;\n  opacity: 1;\n}\n\n.close:hover {\n  opacity: 1;\n}\n\n.fa-ellipsis-v,\n.fa-trash-o {\n  margin-left: auto;\n  cursor: pointer;\n}\n\ninput[type='checkbox'] {\n  cursor: pointer;\n}\n\n#complete {\n  text-decoration: none !important;\n}\n\n#complete p {\n  color: #777;\n  font-size: 15px;\n  font-weight: lighter;\n}\n\n#complete p:hover {\n  color: #000;\n  text-decoration: underline;\n}\n\n.spin-animation {\n  transition: 0.9s;\n  transform: rotate(360deg);\n  -webkit-transform: rotate(360deg);\n  -ms-transform: rotate(360deg);\n}\n\n.reset {\n  cursor: pointer;\n  color: red;\n  transition: 0.5s;\n  transform: rotate(360deg);\n  -ms-transform: rotate(360deg);\n  -webkit-transform: rotate(360deg);\n}\n"],sourceRoot:""}]);const i=a},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",o=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),o&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),o&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,o,r,s){"string"==typeof n&&(n=[[null,n,void 0]]);var a={};if(o)for(var i=0;i<this.length;i++){var c=this[i][0];null!=c&&(a[c]=!0)}for(var A=0;A<n.length;A++){var d=[].concat(n[A]);o&&a[d[0]]||(void 0!==s&&(void 0===d[5]||(d[1]="@layer".concat(d[5].length>0?" ".concat(d[5]):""," {").concat(d[1],"}")),d[5]=s),t&&(d[2]?(d[1]="@media ".concat(d[2]," {").concat(d[1],"}"),d[2]=t):d[2]=t),r&&(d[4]?(d[1]="@supports (".concat(d[4],") {").concat(d[1],"}"),d[4]=r):d[4]="".concat(r)),e.push(d))}},e}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),s="/*# ".concat(r," */"),a=t.sources.map((function(n){return"/*# sourceURL=".concat(t.sourceRoot||"").concat(n," */")}));return[e].concat(a).concat([s]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,o=0;o<e.length;o++)if(e[o].identifier===n){t=o;break}return t}function o(n,o){for(var s={},a=[],i=0;i<n.length;i++){var c=n[i],A=o.base?c[0]+o.base:c[0],d=s[A]||0,l="".concat(A," ").concat(d);s[A]=d+1;var p=t(l),u={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==p)e[p].references++,e[p].updater(u);else{var m=r(u,o);o.byIndex=i,e.splice(i,0,{identifier:l,updater:m,references:1})}a.push(l)}return a}function r(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,r){var s=o(n=n||[],r=r||{});return function(n){n=n||[];for(var a=0;a<s.length;a++){var i=t(s[a]);e[i].references--}for(var c=o(n,r),A=0;A<s.length;A++){var d=t(s[A]);0===e[d].references&&(e[d].updater(),e.splice(d,1))}s=c}}},569:n=>{var e={};n.exports=function(n,t){var o=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var o="";t.supports&&(o+="@supports (".concat(t.supports,") {")),t.media&&(o+="@media ".concat(t.media," {"));var r=void 0!==t.layer;r&&(o+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),o+=t.css,r&&(o+="}"),t.media&&(o+="}"),t.supports&&(o+="}");var s=t.sourceMap;s&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(s))))," */")),e.styleTagTransform(o,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}},490:(n,e,t)=>{const o={randomUUID:"undefined"!=typeof crypto&&crypto.randomUUID&&crypto.randomUUID.bind(crypto)};let r;const s=new Uint8Array(16);function a(){if(!r&&(r="undefined"!=typeof crypto&&crypto.getRandomValues&&crypto.getRandomValues.bind(crypto),!r))throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");return r(s)}const i=[];for(let n=0;n<256;++n)i.push((n+256).toString(16).slice(1));const c=function(n,e,t){if(o.randomUUID&&!e&&!n)return o.randomUUID();const r=(n=n||{}).random||(n.rng||a)();if(r[6]=15&r[6]|64,r[8]=63&r[8]|128,e){t=t||0;for(let n=0;n<16;++n)e[t+n]=r[n];return e}return function(n,e=0){return(i[n[e+0]]+i[n[e+1]]+i[n[e+2]]+i[n[e+3]]+"-"+i[n[e+4]]+i[n[e+5]]+"-"+i[n[e+6]]+i[n[e+7]]+"-"+i[n[e+8]]+i[n[e+9]]+"-"+i[n[e+10]]+i[n[e+11]]+i[n[e+12]]+i[n[e+13]]+i[n[e+14]]+i[n[e+15]]).toLowerCase()}(r)};class A{constructor(n,e){this.task=n,this.isDone=e,this.id=c()}}var d=t(379),l=t.n(d),p=t(795),u=t.n(p),m=t(569),f=t.n(m),E=t(565),h=t.n(E),g=t(216),C=t.n(g),y=t(589),b=t.n(y),v=t(426),B={};B.styleTagTransform=b(),B.setAttributes=h(),B.insert=f().bind(null,"head"),B.domAPI=u(),B.insertStyleElement=C(),l()(v.Z,B),v.Z&&v.Z.locals&&v.Z.locals;const k=new class{constructor(){this.items=[],JSON.parse(localStorage.getItem("ToDoList"))&&JSON.parse(localStorage.getItem("ToDoList")).forEach((n=>{this.items.push({...n})}))}add(n){this.items.push(n),this.store()}edit(n,e){const t=this.items.findIndex((e=>e.id===n.id));this.items[t]=e,this.store()}clear(){this.items=this.items.filter((n=>!n.isDone)),this.store()}reset(n){this.items=[],n.forEach((n=>{this.add(new A(n.task,!0))})),this.store()}remove(n){this.items=this.items.filter((e=>e.id!==n.id)),this.store()}store(){localStorage.setItem("ToDoList",JSON.stringify(this.items))}},x="list-group-item d-flex align-items-center border-bottom",w="list-group-item d-flex align-items-center border-bottom",L=[{task:" a basic todo list app"},{task:"made with ❤️ by Amanuel"},{task:"——— enjoy 🔥 ———"}],U=()=>{JSON.parse(localStorage.getItem("ToDoList"))||L.forEach((n=>{k.add(new A(n.task,!0))}));const n=document.getElementById("dashboard");n.innerHTML="",k.items.sort(((n,e)=>n.index-e.index)).forEach((e=>{const t=document.createElement("li");t.className=e.isDone?x:w;const o={...e},r=document.createElement("input");r.type="checkbox",r.name="name",r.className="form-check-input",r.style.marginRight="12px",r.checked=e.isDone,r.addEventListener("change",(n=>{t.className=e.isDone?w:x,n.target.nextElementSibling.className=e.isDone?"":"cancel",e.isDone=!e.isDone,k.edit(o,e)})),t.addEventListener("click",(()=>{t.classList.add("custom-bg"),i.style="display:none",a.style="display: block"}));const s=document.createElement("span");s.setAttribute("contenteditable","true"),s.appendChild(document.createTextNode(e.task)),s.addEventListener("focus",(()=>{t.classList.add("custom-bg")})),s.addEventListener("keypress",(n=>{"Enter"===n.key&&(t.classList.remove("custom-bg"),s.setAttribute("contenteditable","false"),s.setAttribute("contenteditable","true"),e.task=s.innerText,k.edit(o,e))})),document.addEventListener("click",(n=>{const e=n.target;e!==s&&e!==t&&(t.classList.remove("custom-bg"),i.style="display:block",a.style="display: none")}));const a=document.createElement("span");a.className="fa fa-trash-o close",a.addEventListener("click",(n=>{n.preventDefault(),k.remove(e),U()}));const i=document.createElement("span");i.className="fas fa-ellipsis-v",i.addEventListener("click",(n=>{n.preventDefault()})),t.append(r,s,a,i),n.appendChild(t)})),document.getElementById("task").addEventListener("keypress",(n=>{if("Enter"===n.key){const e=document.getElementById("task").value;n.preventDefault(),e.length>0&&(k.add(new A(e,!1,0)),document.getElementById("task").value="",U())}})),document.getElementById("complete").addEventListener("click",(n=>{n.preventDefault(),k.clear(),U()})),document.getElementById("refresh").addEventListener("click",(function(){let n=this;this.classList.add("reset"),k.reset(L),setTimeout((function(){n.classList.remove("reset")}),1e3),U()}))};U()}},n=>{n(n.s=490)}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,