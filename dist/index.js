"use strict";(self.webpackChunkwebpack_demo=self.webpackChunkwebpack_demo||[]).push([[826],{426:(e,n,t)=>{t.d(n,{Z:()=>a});var r=t(537),o=t.n(r),s=t(645),i=t.n(s)()(o());i.push([e.id,'body {\r\n  background-color: #f6f6f6;\r\n}\r\n\r\n#myList {\r\n  list-style: none;\r\n  margin: 0;\r\n}\r\n\r\n.main {\r\n  width: 500px;\r\n  margin: 100px auto;\r\n  background: #fff;\r\n  padding: 0;\r\n}\r\n\r\ninput:placeholder-shown {\r\n  font-style: italic;\r\n}\r\n\r\n.holder {\r\n  margin: 0;\r\n}\r\n\r\n.form-control {\r\n  border: none;\r\n}\r\n\r\n.list-group {\r\n  margin: 0;\r\n}\r\n\r\n.list-group-item {\r\n  border-right: none;\r\n  border-left: none;\r\n  border-radius: 0;\r\n}\r\n\r\n.btn {\r\n  border-radius: 0;\r\n  padding: 15px;\r\n}\r\n\r\n#refresh {\r\n  margin: 20px auto;\r\n}\r\n\r\n[contenteditable="true"]#dash {\r\n  white-space: nowrap;\r\n  overflow: hidden;\r\n  padding: 7px;\r\n}\r\n\r\n#complete {\r\n  outline: none;\r\n}\r\n\r\n.close {\r\n  display: none;\r\n}\r\n\r\n.fa-ellipsis-v {\r\n  cursor: pointer;\r\n}\r\n',"",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;EACE,yBAAyB;AAC3B;;AAEA;EACE,gBAAgB;EAChB,SAAS;AACX;;AAEA;EACE,YAAY;EACZ,kBAAkB;EAClB,gBAAgB;EAChB,UAAU;AACZ;;AAEA;EACE,kBAAkB;AACpB;;AAEA;EACE,SAAS;AACX;;AAEA;EACE,YAAY;AACd;;AAEA;EACE,SAAS;AACX;;AAEA;EACE,kBAAkB;EAClB,iBAAiB;EACjB,gBAAgB;AAClB;;AAEA;EACE,gBAAgB;EAChB,aAAa;AACf;;AAEA;EACE,iBAAiB;AACnB;;AAEA;EACE,mBAAmB;EACnB,gBAAgB;EAChB,YAAY;AACd;;AAEA;EACE,aAAa;AACf;;AAEA;EACE,aAAa;AACf;;AAEA;EACE,eAAe;AACjB",sourcesContent:['body {\r\n  background-color: #f6f6f6;\r\n}\r\n\r\n#myList {\r\n  list-style: none;\r\n  margin: 0;\r\n}\r\n\r\n.main {\r\n  width: 500px;\r\n  margin: 100px auto;\r\n  background: #fff;\r\n  padding: 0;\r\n}\r\n\r\ninput:placeholder-shown {\r\n  font-style: italic;\r\n}\r\n\r\n.holder {\r\n  margin: 0;\r\n}\r\n\r\n.form-control {\r\n  border: none;\r\n}\r\n\r\n.list-group {\r\n  margin: 0;\r\n}\r\n\r\n.list-group-item {\r\n  border-right: none;\r\n  border-left: none;\r\n  border-radius: 0;\r\n}\r\n\r\n.btn {\r\n  border-radius: 0;\r\n  padding: 15px;\r\n}\r\n\r\n#refresh {\r\n  margin: 20px auto;\r\n}\r\n\r\n[contenteditable="true"]#dash {\r\n  white-space: nowrap;\r\n  overflow: hidden;\r\n  padding: 7px;\r\n}\r\n\r\n#complete {\r\n  outline: none;\r\n}\r\n\r\n.close {\r\n  display: none;\r\n}\r\n\r\n.fa-ellipsis-v {\r\n  cursor: pointer;\r\n}\r\n'],sourceRoot:""}]);const a=i},645:e=>{e.exports=function(e){var n=[];return n.toString=function(){return this.map((function(n){var t="",r=void 0!==n[5];return n[4]&&(t+="@supports (".concat(n[4],") {")),n[2]&&(t+="@media ".concat(n[2]," {")),r&&(t+="@layer".concat(n[5].length>0?" ".concat(n[5]):""," {")),t+=e(n),r&&(t+="}"),n[2]&&(t+="}"),n[4]&&(t+="}"),t})).join("")},n.i=function(e,t,r,o,s){"string"==typeof e&&(e=[[null,e,void 0]]);var i={};if(r)for(var a=0;a<this.length;a++){var c=this[a][0];null!=c&&(i[c]=!0)}for(var d=0;d<e.length;d++){var l=[].concat(e[d]);r&&i[l[0]]||(void 0!==s&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=s),t&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=t):l[2]=t),o&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=o):l[4]="".concat(o)),n.push(l))}},n}},537:e=>{e.exports=function(e){var n=e[1],t=e[3];if(!t)return n;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),s="/*# ".concat(o," */"),i=t.sources.map((function(e){return"/*# sourceURL=".concat(t.sourceRoot||"").concat(e," */")}));return[n].concat(i).concat([s]).join("\n")}return[n].join("\n")}},379:e=>{var n=[];function t(e){for(var t=-1,r=0;r<n.length;r++)if(n[r].identifier===e){t=r;break}return t}function r(e,r){for(var s={},i=[],a=0;a<e.length;a++){var c=e[a],d=r.base?c[0]+r.base:c[0],l=s[d]||0,u="".concat(d," ").concat(l);s[d]=l+1;var A=t(u),p={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==A)n[A].references++,n[A].updater(p);else{var m=o(p,r);r.byIndex=a,n.splice(a,0,{identifier:u,updater:m,references:1})}i.push(u)}return i}function o(e,n){var t=n.domAPI(n);return t.update(e),function(n){if(n){if(n.css===e.css&&n.media===e.media&&n.sourceMap===e.sourceMap&&n.supports===e.supports&&n.layer===e.layer)return;t.update(e=n)}else t.remove()}}e.exports=function(e,o){var s=r(e=e||[],o=o||{});return function(e){e=e||[];for(var i=0;i<s.length;i++){var a=t(s[i]);n[a].references--}for(var c=r(e,o),d=0;d<s.length;d++){var l=t(s[d]);0===n[l].references&&(n[l].updater(),n.splice(l,1))}s=c}}},569:e=>{var n={};e.exports=function(e,t){var r=function(e){if(void 0===n[e]){var t=document.querySelector(e);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(e){t=null}n[e]=t}return n[e]}(e);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},216:e=>{e.exports=function(e){var n=document.createElement("style");return e.setAttributes(n,e.attributes),e.insert(n,e.options),n}},565:(e,n,t)=>{e.exports=function(e){var n=t.nc;n&&e.setAttribute("nonce",n)}},795:e=>{e.exports=function(e){var n=e.insertStyleElement(e);return{update:function(t){!function(e,n,t){var r="";t.supports&&(r+="@supports (".concat(t.supports,") {")),t.media&&(r+="@media ".concat(t.media," {"));var o=void 0!==t.layer;o&&(r+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),r+=t.css,o&&(r+="}"),t.media&&(r+="}"),t.supports&&(r+="}");var s=t.sourceMap;s&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(s))))," */")),n.styleTagTransform(r,e,n.options)}(n,e,t)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(n)}}}},589:e=>{e.exports=function(e,n){if(n.styleSheet)n.styleSheet.cssText=e;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(e))}}},631:(e,n,t)=>{class r{constructor(e,n,t=0){this.task=e,this.isDone=n,this.index=t,this.id=(new Date).getTime()}newTask(e){this.task=e}done(e){this.isDone=e}newIndex(e){this.index=e}}class o{constructor(){this.items=[],JSON.parse(localStorage.getItem("ToDoList"))&&JSON.parse(localStorage.getItem("ToDoList")).forEach((e=>{this.items.push(Object.assign(new r,e))}))}add(e){e.newIndex(this.items.length),this.items.push(e),this.store()}edit(e){const n=this.items.findIndex((n=>n.id===e.id));this.items[n]=e,this.store()}clear(){this.items=this.items.filter((e=>!e.isDone)),this.setIndex(),this.store()}remove(e){this.items=this.items.filter((n=>n.id!==e.id)),this.setIndex(),this.store()}store(){localStorage.setItem("ToDoList",JSON.stringify(this.items))}order(e,n){return e.id-n.id}setIndex(){const e=this.items.sort(this.order);e.forEach(((e,n)=>{e.index=n})),this.items=e}}var s=t(379),i=t.n(s),a=t(795),c=t.n(a),d=t(569),l=t.n(d),u=t(565),A=t.n(u),p=t(216),m=t.n(p),f=t(589),h=t.n(f),g=t(426),E={};E.styleTagTransform=h(),E.setAttributes=A(),E.insert=l().bind(null,"head"),E.domAPI=c(),E.insertStyleElement=m(),i()(g.Z,E),g.Z&&g.Z.locals&&g.Z.locals;const v=new class{constructor(){this.addRemove=new o}update(e,n){e.currentTarget.checked?n.done(!0):n.done(!1),this.addRemove.edit(n)}},y=new o,b=(e,n)=>e.index-n.index,C=()=>{const e=document.getElementById("dashboard");e.innerHTML="",y.items.sort(b).forEach((n=>{const t=document.createElement("li");t.className="list-group-item d-flex justify-content-between align-items-center";const r=document.createElement("input");r.type="checkbox",r.name="name",r.className="form-check-input pull-left",r.style.marginRight="12px",r.checked=n.isDone,r.addEventListener("change",(e=>{v.update(e,n)}));const o=document.createElement("span");o.setAttribute("contenteditable","true"),o.setAttribute("id","dash"),o.appendChild(document.createTextNode(n.task)),o.addEventListener("keypress",(e=>{"Enter"===e.key&&(n.newTask(o.innerText),y.edit(n),o.setAttribute("contenteditable","false"),o.setAttribute("contenteditable","true"))}));const s=document.createElement("span");s.className="fa fa-trash-o pull-right close",s.addEventListener("click",(e=>{e.preventDefault(),y.remove(n),C()}));const i=document.createElement("span");i.className="fas fa-ellipsis-v pull-right",i.addEventListener("click",(e=>{e.preventDefault(),i.style="display:none",s.style="display: block"})),t.append(r,o,s,i),e.appendChild(t)})),document.getElementById("task").addEventListener("keypress",(e=>{if("Enter"===e.key){const n=document.getElementById("task").value;e.preventDefault(),n.length>0&&(y.add(new r(n,!1,0)),document.getElementById("task").value="",C())}})),document.getElementById("complete").addEventListener("click",(e=>{e.preventDefault(),y.clear(),C()}))};C()}},e=>{e(e.s=631)}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,